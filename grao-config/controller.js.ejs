<?php

namespace App\Http\Controllers\<%= props.spaceFirst %>;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use <%= props.nameModelSpace _%>\<%= props.nameCapitalize %>;

class <%= props.nameCapitalize %>Controller extends Controller
{
    public function index()
    {	
    	$data = ['<%= props.name %>s'];
    	$<%= props.name %>s = <%= props.nameCapitalize %>::orderBy('id', 'desc')->get();
    	return view('controle.<%= props.name %>.index', compact($data));
    }

    public function create()
    {
        $data = [];
        return view('controle.<%= props.name %>.form', compact($data));
    }

    public function store(Request $request)
    {
        $request->validate([
            'nome' => 'required|min:2'
        ]);
        
        try {

            $input = $request->all();

            $<%= props.name %> = <%= props.nameCapitalize %>::create($input);
            
            return redirect()->route('controle.<%= props.name %>.index')->with('msg', 'Registro cadastrado com sucesso!');

        } catch (\Exception $e) {
            return redirect()->back()->with('msg', 'Não foi possível salvar os dados')->with('error', true)->withInput();
        }
    }

    public function edit($id)
    {
        $data = ['<%= props.name %>'];
        $<%= props.name %> = <%= props.nameCapitalize %>::find($id);
        return view('controle.<%= props.name %>.form', compact($data));
    }

    public function update(Request $request, $id)
    {
        $request->validate([
            'nome' => 'required|min:2'
        ]);

        $input = $request->except('_token');
        $input['ativo'] = (isset($input['ativo'])) ? 1 : 0;
            
        try {

            $<%= props.name %> = <%= props.nameCapitalize %>::find($id)->update($input);

            return redirect()->route('controle.<%= props.name %>.index')->with('msg', 'Registro atualizado com sucesso!');

        } catch (\Exception $e) {
            return redirect()->back()->with('msg', 'Não foi possível alterar o registro')->with('error', true)->with('exception', $e->getMessage());
        }
    }

    public function destroy($id)
    {
        try {
            $<%= props.name %> = <%= props.nameCapitalize %>::find($id);

            $<%= props.name %>->delete();

            return redirect()->route('controle.<%= props.name %>.index')->with('msg', 'registro excluido com sucesso!');

        } catch (\Exception $e) {
            return redirect()->route('controle.<%= props.name %>.index')->with('msg', 'não foi possível excluir o registro!')->with('exception', $e->getMessage());
        }
    }


}
